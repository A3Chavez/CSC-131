Dear students,

This is for your own practice to help you with your team project. You will get full points for completing and submitting. Feel free to collaborate on this lab with any one or more students in the class. Only one  submission is required for your group.  Only one student please submit under your name. DO NOT MISS WRITING ALL TEAM MEMBER NAMES (FIRST AND LAST NAME) ON TOP OF THE SUBMISSION.

Go to URL: https://github.com/, (Links to an external site.) register an account with your SacState email, and then login.

Part 1)  Getting ready: Watch the following video tutorials if this is your first time to use Git with Eclipse.

A. How To Add Eclipse Project To GitHub | How to Commit, Push, Pull from Eclipse to GitHub

Link (Links to an external site.)
Git Basics
https://www.youtube.com/watch?v=LPT7v69guVY

B. Committing, pushing, pulling and resolving conflicts with git and Eclipse

Link (Links to an external site.)
How to solve conflicts
https://www.youtube.com/watch?v=M88sKbRDR8Y


Part 2)  Working as a team:

1. Select one team member as the Git master of your group. The master needs to create a repository, and add your teammates and the instructor (jagannadha.chidella@csus.edu) as "Collaborators" in the "Settings" tab. (All members excluding the master will receive an email from Git, which informs you that you have been added to the master's repository.) 

2. All members clone the repository created by the master in your Eclipse.

3. All members create a java project named "Lab02" in your Eclipse, and link it to your local git repository. 

4. The master downloads Hello.java download , add it to your Lab02 project in Eclipse. Update line 8 with his/her information, then save, commit, push the change to Git.

5. Everyone else (excluding the master) pull the latest change from Git, which is the java file just added by the master.

6. Everyone else tries to update line 9 in Hello.java with their own information. Save and commit to their local repository.

7. Everyone else try to push the index (your updates in your local repository) to Git, resolve conflicts if needed. To resolve a conflict, you will need to keep the information added by your teammates, by adding your line 9 as a new line underneath the latest line added by your teammates to Hello.java. (Do NOT erase other teammates' lines when resolving a conflict.)

8. When everyone finishes, the master checks Git repository, and sees whether Hello.java includes all team member's information in it. If not, ask your teammate(s) to push their changes.